// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`badges.js Test 1`] = `
<RCTScrollView
  contentContainerStyle={
    {
      "alignItems": "center",
      "flexDirection": "row",
      "flexWrap": "wrap",
      "justifyContent": "center",
    }
  }
  style={
    {
      "backgroundColor": "#F1F1F1",
    }
  }
>
  <View>
    <Text
      style={
        [
          {
            "fontSize": 20,
            "lineHeight": 28,
          },
          {
            "textAlign": "center",
          },
          {
            "marginTop": 20,
          },
          {
            "color": "#060606",
          },
        ]
      }
    >
      No badges available
    </Text>
  </View>
</RCTScrollView>
`;

exports[`create-a-new-workout-preset.js Test 1`] = `
<RCTScrollView
  style={
    {
      "backgroundColor": "#F1F1F1",
    }
  }
>
  <View>
    <View
      style={
        [
          {
            "alignItems": "center",
          },
          {
            "marginBottom": 5,
            "marginLeft": 5,
            "marginRight": 5,
            "marginTop": 5,
          },
        ]
      }
    >
      <Text
        style={
          [
            {
              "fontSize": 20,
              "lineHeight": 28,
            },
            {
              "color": "#060606",
            },
          ]
        }
      >
        Workout Name
      </Text>
      <TextInput
        onBlur={[Function]}
        onChangeText={[Function]}
        style={
          [
            {
              "textAlign": "center",
            },
            {
              "width": "91.666667%",
            },
            {
              "flexBasis": "0%",
              "flexGrow": 1,
              "flexShrink": 1,
            },
            {
              "marginBottom": 10,
              "marginLeft": 10,
              "marginRight": 10,
              "marginTop": 10,
            },
            {
              "backgroundColor": "#DEDEDE",
            },
          ]
        }
      />
      <Text
        style={
          [
            {
              "fontSize": 20,
              "lineHeight": 28,
            },
            {
              "color": "#060606",
            },
          ]
        }
      >
        Workout Notes
      </Text>
      <TextInput
        multiline={true}
        numberOfLines={3}
        onBlur={[Function]}
        onChangeText={[Function]}
        style={
          [
            {
              "textAlign": "center",
            },
            {
              "width": "91.666667%",
            },
            {
              "flexBasis": "0%",
              "flexGrow": 1,
              "flexShrink": 1,
            },
            {
              "marginBottom": 10,
              "marginLeft": 10,
              "marginRight": 10,
              "marginTop": 10,
            },
            {
              "backgroundColor": "#DEDEDE",
            },
          ]
        }
      />
      <Text
        style={
          [
            {
              "fontSize": 20,
              "lineHeight": 28,
            },
            {
              "marginTop": 30,
            },
            {
              "color": "#060606",
            },
          ]
        }
      >
        Exercises
      </Text>
      <View
        style={
          [
            {
              "alignItems": "center",
            },
            {
              "display": "flex",
            },
            {
              "justifyContent": "center",
            },
          ]
        }
      />
      <View
        accessibilityState={
          {
            "busy": undefined,
            "checked": undefined,
            "disabled": undefined,
            "expanded": undefined,
            "selected": undefined,
          }
        }
        accessibilityValue={
          {
            "max": undefined,
            "min": undefined,
            "now": undefined,
            "text": undefined,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          {
            "backgroundColor": "#2296f3",
            "marginBottom": 5,
            "marginLeft": 5,
            "marginRight": 5,
            "marginTop": 5,
            "opacity": 1,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
          }
        }
      >
        <Text
          style={
            [
              {
                "fontWeight": "700",
              },
              {
                "fontSize": 16,
              },
              {
                "color": "#F1F1F1",
              },
            ]
          }
        >
          Add Exercise
        </Text>
      </View>
      <View
        style={
          [
            {
              "marginTop": 40,
            },
          ]
        }
      >
        <Text
          style={
            [
              {
                "fontSize": 20,
                "lineHeight": 28,
              },
              {
                "textAlign": "center",
              },
              {
                "color": "#060606",
              },
            ]
          }
        >
          Muscles Worked
        </Text>
        <Text
          style={
            [
              {
                "textAlign": "center",
              },
            ]
          }
        />
        <Text
          style={
            [
              {
                "fontSize": 20,
                "lineHeight": 28,
              },
              {
                "textAlign": "center",
              },
              {
                "marginTop": 20,
              },
              {
                "color": "#060606",
              },
            ]
          }
        >
          Muscles Not Worked
        </Text>
        <Text
          style={
            [
              {
                "textAlign": "center",
              },
            ]
          }
        >
          Pectorals, Upper back, Lower back, Deltoids, Biceps, Triceps, Quadriceps, Hamstrings, Glutes, Calves, Abs, Obliques, Cardio
        </Text>
      </View>
      <View
        accessibilityState={
          {
            "busy": undefined,
            "checked": undefined,
            "disabled": undefined,
            "expanded": undefined,
            "selected": undefined,
          }
        }
        accessibilityValue={
          {
            "max": undefined,
            "min": undefined,
            "now": undefined,
            "text": undefined,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          {
            "backgroundColor": "#2296f3",
            "marginBottom": 5,
            "marginLeft": 5,
            "marginRight": 5,
            "marginTop": 5,
            "opacity": 1,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
          }
        }
      >
        <Text
          style={
            [
              {
                "fontWeight": "700",
              },
              {
                "fontSize": 16,
              },
              {
                "color": "#F1F1F1",
              },
            ]
          }
        >
          Submit
        </Text>
      </View>
      <View
        accessibilityState={
          {
            "busy": undefined,
            "checked": undefined,
            "disabled": undefined,
            "expanded": undefined,
            "selected": undefined,
          }
        }
        accessibilityValue={
          {
            "max": undefined,
            "min": undefined,
            "now": undefined,
            "text": undefined,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          {
            "backgroundColor": "#00008b",
            "marginBottom": 5,
            "marginLeft": 5,
            "marginRight": 5,
            "marginTop": 5,
            "opacity": 1,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
          }
        }
      >
        <Text
          style={
            [
              {
                "fontWeight": "700",
              },
              {
                "fontSize": 16,
              },
              {
                "color": "#F1F1F1",
              },
            ]
          }
        >
          Reset Form
        </Text>
      </View>
    </View>
  </View>
</RCTScrollView>
`;

exports[`create-exercise.js 1`] = `
<RCTScrollView
  style={
    {
      "backgroundColor": "#F1F1F1",
    }
  }
>
  <View>
    <View
      style={
        [
          {
            "alignItems": "center",
          },
          {
            "marginBottom": 5,
            "marginLeft": 5,
            "marginRight": 5,
            "marginTop": 5,
          },
        ]
      }
    >
      <Text
        style={
          [
            {
              "fontSize": 20,
              "lineHeight": 28,
            },
            {
              "color": "#060606",
            },
          ]
        }
      >
        Exercise Name
      </Text>
      <TextInput
        onBlur={[Function]}
        onChangeText={[Function]}
        style={
          [
            {
              "textAlign": "center",
            },
            {
              "width": "91.666667%",
            },
            {
              "flexBasis": "0%",
              "flexGrow": 1,
              "flexShrink": 1,
            },
            {
              "marginBottom": 10,
              "marginLeft": 10,
              "marginRight": 10,
              "marginTop": 10,
            },
            {
              "backgroundColor": "#DEDEDE",
            },
          ]
        }
        value=""
      />
      <Text
        style={
          [
            {
              "fontSize": 20,
              "lineHeight": 28,
            },
            {
              "color": "#060606",
            },
          ]
        }
      >
        Exercise Type
      </Text>
      <View
        style={
          {
            "padding": 16,
          }
        }
      >
        <View
          onLayout={[Function]}
          style={
            {
              "borderColor": "gray",
              "borderRadius": 8,
              "borderWidth": 1,
              "height": 50,
              "justifyContent": "center",
              "paddingHorizontal": 8,
              "width": 200,
            }
          }
        >
          <View
            accessibilityState={
              {
                "busy": undefined,
                "checked": undefined,
                "disabled": undefined,
                "expanded": undefined,
                "selected": undefined,
              }
            }
            accessible={false}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              {
                "alignItems": "center",
                "flexDirection": "row",
                "justifyContent": "space-between",
              }
            }
          >
            <Text
              style={
                [
                  {
                    "flex": 1,
                    "fontSize": 16,
                    "writingDirection": "ltr",
                  },
                  {
                    "color": "#060606",
                  },
                  {},
                ]
              }
            >
              Select an option
            </Text>
            <Image
              source={1}
              style={
                {
                  "height": 20,
                  "tintColor": "gray",
                  "width": 20,
                }
              }
            />
          </View>
        </View>
      </View>
      <Text
        style={
          [
            {
              "fontSize": 20,
              "lineHeight": 28,
            },
            {
              "color": "#060606",
            },
          ]
        }
      >
        Exercise Notes
      </Text>
      <TextInput
        multiline={true}
        numberOfLines={3}
        onBlur={[Function]}
        onChangeText={[Function]}
        style={
          [
            {
              "textAlign": "center",
            },
            {
              "width": "91.666667%",
            },
            {
              "flexBasis": "0%",
              "flexGrow": 1,
              "flexShrink": 1,
            },
            {
              "marginBottom": 10,
              "marginLeft": 10,
              "marginRight": 10,
              "marginTop": 10,
            },
            {
              "backgroundColor": "#DEDEDE",
            },
          ]
        }
        value=""
      />
      <View
        style={
          [
            {
              "flexBasis": "0%",
              "flexGrow": 1,
              "flexShrink": 1,
            },
            {
              "justifyContent": "center",
            },
            {
              "alignItems": "center",
            },
            {
              "marginBottom": 12,
            },
          ]
        }
      >
        <View
          accessibilityState={
            {
              "busy": undefined,
              "checked": undefined,
              "disabled": undefined,
              "expanded": undefined,
              "selected": undefined,
            }
          }
          accessibilityValue={
            {
              "max": undefined,
              "min": undefined,
              "now": undefined,
              "text": undefined,
            }
          }
          accessible={true}
          collapsable={false}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            {
              "backgroundColor": "#FF0000",
              "marginTop": 5,
              "opacity": 1,
              "paddingBottom": 8,
              "paddingLeft": 8,
              "paddingRight": 8,
              "paddingTop": 8,
            }
          }
        >
          <Text
            style={
              [
                {
                  "fontWeight": "500",
                },
                {
                  "fontSize": 16,
                  "lineHeight": 24,
                },
              ]
            }
          >
            Upload 
            Video
          </Text>
        </View>
      </View>
      <View
        style={
          [
            {
              "marginBottom": 12,
            },
          ]
        }
      >
        <View
          accessibilityState={
            {
              "busy": undefined,
              "checked": undefined,
              "disabled": undefined,
              "expanded": undefined,
              "selected": undefined,
            }
          }
          accessibilityValue={
            {
              "max": undefined,
              "min": undefined,
              "now": undefined,
              "text": undefined,
            }
          }
          accessible={true}
          collapsable={false}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            {
              "backgroundColor": "#FF0000",
              "marginTop": 1,
              "opacity": 1,
              "paddingBottom": 8,
              "paddingLeft": 8,
              "paddingRight": 8,
              "paddingTop": 8,
            }
          }
        >
          <Text
            style={
              [
                {
                  "fontWeight": "500",
                },
                {
                  "fontSize": 16,
                  "lineHeight": 24,
                },
                {
                  "color": "#060606",
                },
              ]
            }
          >
            Select Primary Muscles
          </Text>
        </View>
      </View>
      <View
        style={
          [
            {
              "marginBottom": 12,
            },
          ]
        }
      >
        <View
          accessibilityState={
            {
              "busy": undefined,
              "checked": undefined,
              "disabled": undefined,
              "expanded": undefined,
              "selected": undefined,
            }
          }
          accessibilityValue={
            {
              "max": undefined,
              "min": undefined,
              "now": undefined,
              "text": undefined,
            }
          }
          accessible={true}
          collapsable={false}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            {
              "backgroundColor": "#FF0000",
              "marginTop": 1,
              "opacity": 1,
              "paddingBottom": 8,
              "paddingLeft": 8,
              "paddingRight": 8,
              "paddingTop": 8,
            }
          }
        >
          <Text
            style={
              [
                {
                  "fontWeight": "500",
                },
                {
                  "fontSize": 16,
                  "lineHeight": 24,
                },
                {
                  "color": "#060606",
                },
              ]
            }
          >
            Select Secondary Muscles
          </Text>
        </View>
      </View>
      <View
        accessibilityState={
          {
            "busy": undefined,
            "checked": undefined,
            "disabled": undefined,
            "expanded": undefined,
            "selected": undefined,
          }
        }
        accessibilityValue={
          {
            "max": undefined,
            "min": undefined,
            "now": undefined,
            "text": undefined,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          {
            "backgroundColor": "#FF0000",
            "marginTop": 15,
            "opacity": 1,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
          }
        }
      >
        <Text
          style={
            [
              {
                "fontWeight": "700",
              },
              {
                "fontSize": 30,
                "lineHeight": 36,
              },
              {
                "color": "#060606",
              },
            ]
          }
        >
          Add Exercise
        </Text>
      </View>
    </View>
  </View>
</RCTScrollView>
`;

exports[`create-workout.js Test 1`] = `
<RCTScrollView
  style={
    {
      "backgroundColor": "#F1F1F1",
    }
  }
>
  <View>
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": undefined,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "alignItems": "center",
          "alignSelf": "center",
          "backgroundColor": "#FF0000",
          "height": 80,
          "justifyContent": "center",
          "marginBottom": 20,
          "marginTop": 5,
          "opacity": 1,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "width": "66.666667%",
        }
      }
    >
      <Text
        style={
          [
            {
              "fontWeight": "500",
            },
            {
              "fontSize": 16,
              "lineHeight": 24,
            },
            {
              "color": "#060606",
            },
          ]
        }
      >
        Begin Empty Workout
      </Text>
    </View>
    <Text
      style={
        [
          {
            "fontSize": 24,
            "lineHeight": 32,
          },
          {
            "alignSelf": "center",
          },
          {
            "marginBottom": 40,
            "marginLeft": 40,
            "marginRight": 40,
            "marginTop": 40,
          },
          {
            "marginBottom": 20,
          },
          {
            "color": "#060606",
          },
        ]
      }
    >
      Workout Presets
    </Text>
  </View>
</RCTScrollView>
`;

exports[`index.js Test 1`] = `
<RCTScrollView
  contentContainerStyle={
    {
      "alignItems": "center",
    }
  }
  style={
    [
      {
        "backgroundColor": "#F1F1F1",
        "flex": 1,
      },
      {
        "backgroundColor": "#F1F1F1",
      },
    ]
  }
>
  <View>
    <View
      style={
        [
          {
            "height": 300,
          },
          {
            "marginTop": 12,
          },
        ]
      }
    >
      <RCTScrollView
        data={
          [
            {
              "image": 1,
              "text": "Sahih Muslim 2664, Sahih",
            },
            {
              "image": 1,
              "text": "Surat Al-Baqarah 2:195",
            },
            {
              "image": 1,
              "text": "Surah Al-Araf 7:31",
            },
            {
              "image": 1,
              "text": "Surah Al-Anfal 8:60",
            },
            {
              "image": 1,
              "text": "Surah An-Najm 53:39",
            },
            {
              "image": 1,
              "text": "Sunan Abi Dawood 4078, Sahih",
            },
          ]
        }
        getItem={[Function]}
        getItemCount={[Function]}
        horizontal={true}
        keyExtractor={[Function]}
        onContentSizeChange={[Function]}
        onLayout={[Function]}
        onMomentumScrollBegin={[Function]}
        onMomentumScrollEnd={[Function]}
        onScroll={[Function]}
        onScrollBeginDrag={[Function]}
        onScrollEndDrag={[Function]}
        pagingEnabled={true}
        removeClippedSubviews={false}
        renderItem={[Function]}
        scrollEventThrottle={0.0001}
        showsHorizontalScrollIndicator={false}
        stickyHeaderIndices={[]}
        viewabilityConfigCallbackPairs={[]}
      >
        <View>
          <View
            onFocusCapture={[Function]}
            onLayout={[Function]}
            style={
              [
                {
                  "flexDirection": "row",
                },
                null,
              ]
            }
          >
            <View
              style={
                {
                  "alignItems": "center",
                  "justifyContent": "flex-start",
                  "width": 750,
                }
              }
            >
              <Image
                source={1}
                style={
                  {
                    "borderRadius": 10,
                    "height": 200,
                    "resizeMode": "cover",
                    "width": 675,
                  }
                }
              />
              <Text
                style={
                  {
                    "color": "#333",
                    "fontSize": 16,
                    "marginTop": 10,
                  }
                }
              >
                Sahih Muslim 2664, Sahih
              </Text>
            </View>
          </View>
          <View
            onFocusCapture={[Function]}
            onLayout={[Function]}
            style={
              [
                {
                  "flexDirection": "row",
                },
                null,
              ]
            }
          >
            <View
              style={
                {
                  "alignItems": "center",
                  "justifyContent": "flex-start",
                  "width": 750,
                }
              }
            >
              <Image
                source={1}
                style={
                  {
                    "borderRadius": 10,
                    "height": 200,
                    "resizeMode": "cover",
                    "width": 675,
                  }
                }
              />
              <Text
                style={
                  {
                    "color": "#333",
                    "fontSize": 16,
                    "marginTop": 10,
                  }
                }
              >
                Surat Al-Baqarah 2:195
              </Text>
            </View>
          </View>
          <View
            onFocusCapture={[Function]}
            onLayout={[Function]}
            style={
              [
                {
                  "flexDirection": "row",
                },
                null,
              ]
            }
          >
            <View
              style={
                {
                  "alignItems": "center",
                  "justifyContent": "flex-start",
                  "width": 750,
                }
              }
            >
              <Image
                source={1}
                style={
                  {
                    "borderRadius": 10,
                    "height": 200,
                    "resizeMode": "cover",
                    "width": 675,
                  }
                }
              />
              <Text
                style={
                  {
                    "color": "#333",
                    "fontSize": 16,
                    "marginTop": 10,
                  }
                }
              >
                Surah Al-Araf 7:31
              </Text>
            </View>
          </View>
          <View
            onFocusCapture={[Function]}
            onLayout={[Function]}
            style={
              [
                {
                  "flexDirection": "row",
                },
                null,
              ]
            }
          >
            <View
              style={
                {
                  "alignItems": "center",
                  "justifyContent": "flex-start",
                  "width": 750,
                }
              }
            >
              <Image
                source={1}
                style={
                  {
                    "borderRadius": 10,
                    "height": 200,
                    "resizeMode": "cover",
                    "width": 675,
                  }
                }
              />
              <Text
                style={
                  {
                    "color": "#333",
                    "fontSize": 16,
                    "marginTop": 10,
                  }
                }
              >
                Surah Al-Anfal 8:60
              </Text>
            </View>
          </View>
          <View
            onFocusCapture={[Function]}
            onLayout={[Function]}
            style={
              [
                {
                  "flexDirection": "row",
                },
                null,
              ]
            }
          >
            <View
              style={
                {
                  "alignItems": "center",
                  "justifyContent": "flex-start",
                  "width": 750,
                }
              }
            >
              <Image
                source={1}
                style={
                  {
                    "borderRadius": 10,
                    "height": 200,
                    "resizeMode": "cover",
                    "width": 675,
                  }
                }
              />
              <Text
                style={
                  {
                    "color": "#333",
                    "fontSize": 16,
                    "marginTop": 10,
                  }
                }
              >
                Surah An-Najm 53:39
              </Text>
            </View>
          </View>
          <View
            onFocusCapture={[Function]}
            onLayout={[Function]}
            style={
              [
                {
                  "flexDirection": "row",
                },
                null,
              ]
            }
          >
            <View
              style={
                {
                  "alignItems": "center",
                  "justifyContent": "flex-start",
                  "width": 750,
                }
              }
            >
              <Image
                source={1}
                style={
                  {
                    "borderRadius": 10,
                    "height": 200,
                    "resizeMode": "cover",
                    "width": 675,
                  }
                }
              />
              <Text
                style={
                  {
                    "color": "#333",
                    "fontSize": 16,
                    "marginTop": 10,
                  }
                }
              >
                Sunan Abi Dawood 4078, Sahih
              </Text>
            </View>
          </View>
        </View>
      </RCTScrollView>
      <View
        style={
          {
            "alignItems": "center",
            "bottom": 10,
            "flexDirection": "row",
            "justifyContent": "center",
            "position": "absolute",
            "width": "100%",
          }
        }
      >
        <View
          style={
            [
              {
                "borderRadius": 5,
                "height": 10,
                "marginHorizontal": 5,
                "width": 10,
              },
              {
                "backgroundColor": "#333",
              },
            ]
          }
        />
        <View
          style={
            [
              {
                "borderRadius": 5,
                "height": 10,
                "marginHorizontal": 5,
                "width": 10,
              },
              {
                "backgroundColor": "#ccc",
              },
            ]
          }
        />
        <View
          style={
            [
              {
                "borderRadius": 5,
                "height": 10,
                "marginHorizontal": 5,
                "width": 10,
              },
              {
                "backgroundColor": "#ccc",
              },
            ]
          }
        />
        <View
          style={
            [
              {
                "borderRadius": 5,
                "height": 10,
                "marginHorizontal": 5,
                "width": 10,
              },
              {
                "backgroundColor": "#ccc",
              },
            ]
          }
        />
        <View
          style={
            [
              {
                "borderRadius": 5,
                "height": 10,
                "marginHorizontal": 5,
                "width": 10,
              },
              {
                "backgroundColor": "#ccc",
              },
            ]
          }
        />
        <View
          style={
            [
              {
                "borderRadius": 5,
                "height": 10,
                "marginHorizontal": 5,
                "width": 10,
              },
              {
                "backgroundColor": "#ccc",
              },
            ]
          }
        />
      </View>
    </View>
    <Text
      style={
        [
          {
            "marginTop": 40,
          },
          {
            "fontSize": 24,
            "lineHeight": 32,
          },
        ]
      }
    >
      Why use a fitness logger app?
    </Text>
    <Text
      style={
        [
          {
            "marginBottom": 12,
            "marginLeft": 12,
            "marginRight": 12,
            "marginTop": 12,
          },
        ]
      }
    >
      Using a fitness logger app is a powerful way to take control of your health and fitness journey. It helps you monitor your progress, set achievable goals, and stay accountable by providing a clear picture of your workouts. By tracking your efforts, you can identify trends and make informed adjustments to your routine, ensuring you continue improving your fitness. Whether you're striving to lose weight, build strength, or simply maintain a healthy lifestyle, a fitness logger app makes it easier to turn your goals into lasting habits.
    </Text>
    <Text
      style={
        [
          {
            "marginTop": 20,
          },
          {
            "fontSize": 24,
            "lineHeight": 32,
          },
        ]
      }
    >
      FAQ
    </Text>
    <View
      style={
        [
          {
            "paddingBottom": 10,
            "paddingLeft": 10,
            "paddingRight": 10,
            "paddingTop": 10,
          },
          {
            "width": 384,
          },
          {
            "marginTop": 12,
          },
        ]
      }
    >
      <View>
        <View
          accessibilityState={
            {
              "busy": undefined,
              "checked": undefined,
              "disabled": undefined,
              "expanded": undefined,
              "selected": undefined,
            }
          }
          accessibilityValue={
            {
              "max": undefined,
              "min": undefined,
              "now": undefined,
              "text": undefined,
            }
          }
          accessible={true}
          collapsable={false}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            {
              "backgroundColor": "#F1F1F1",
              "borderBottomWidth": 1,
              "borderLeftWidth": 1,
              "borderRightWidth": 1,
              "borderTopWidth": 1,
              "opacity": 1,
              "paddingBottom": 15,
              "paddingLeft": 15,
              "paddingRight": 15,
              "paddingTop": 15,
            }
          }
        >
          <Text
            style={
              [
                {
                  "fontWeight": "700",
                },
              ]
            }
          >
            What is React Native?
          </Text>
        </View>
        <View
          collapsable={false}
          pointerEvents="none"
          style={
            {
              "height": 0,
              "overflow": "hidden",
            }
          }
        >
          <View
            collapsable={false}
            onLayout={[Function]}
            style={{}}
          >
            <View
              style={
                [
                  {
                    "paddingBottom": 10,
                    "paddingLeft": 10,
                    "paddingRight": 10,
                    "paddingTop": 10,
                  },
                ]
              }
            >
              <Text>
                React Native is a framework for building mobile apps.
              </Text>
            </View>
          </View>
        </View>
      </View>
      <View>
        <View
          accessibilityState={
            {
              "busy": undefined,
              "checked": undefined,
              "disabled": undefined,
              "expanded": undefined,
              "selected": undefined,
            }
          }
          accessibilityValue={
            {
              "max": undefined,
              "min": undefined,
              "now": undefined,
              "text": undefined,
            }
          }
          accessible={true}
          collapsable={false}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            {
              "backgroundColor": "#F1F1F1",
              "borderBottomWidth": 1,
              "borderLeftWidth": 1,
              "borderRightWidth": 1,
              "borderTopWidth": 1,
              "opacity": 1,
              "paddingBottom": 15,
              "paddingLeft": 15,
              "paddingRight": 15,
              "paddingTop": 15,
            }
          }
        >
          <Text
            style={
              [
                {
                  "fontWeight": "700",
                },
              ]
            }
          >
            How does it work?
          </Text>
        </View>
        <View
          collapsable={false}
          pointerEvents="none"
          style={
            {
              "height": 0,
              "overflow": "hidden",
            }
          }
        >
          <View
            collapsable={false}
            onLayout={[Function]}
            style={{}}
          >
            <View
              style={
                [
                  {
                    "paddingBottom": 10,
                    "paddingLeft": 10,
                    "paddingRight": 10,
                    "paddingTop": 10,
                  },
                ]
              }
            >
              <Text>
                It uses JavaScript and React to build native mobile apps.
              </Text>
            </View>
          </View>
        </View>
      </View>
      <View>
        <View
          accessibilityState={
            {
              "busy": undefined,
              "checked": undefined,
              "disabled": undefined,
              "expanded": undefined,
              "selected": undefined,
            }
          }
          accessibilityValue={
            {
              "max": undefined,
              "min": undefined,
              "now": undefined,
              "text": undefined,
            }
          }
          accessible={true}
          collapsable={false}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            {
              "backgroundColor": "#F1F1F1",
              "borderBottomWidth": 1,
              "borderLeftWidth": 1,
              "borderRightWidth": 1,
              "borderTopWidth": 1,
              "opacity": 1,
              "paddingBottom": 15,
              "paddingLeft": 15,
              "paddingRight": 15,
              "paddingTop": 15,
            }
          }
        >
          <Text
            style={
              [
                {
                  "fontWeight": "700",
                },
              ]
            }
          >
            Is it easy to learn?
          </Text>
        </View>
        <View
          collapsable={false}
          pointerEvents="none"
          style={
            {
              "height": 0,
              "overflow": "hidden",
            }
          }
        >
          <View
            collapsable={false}
            onLayout={[Function]}
            style={{}}
          >
            <View
              style={
                [
                  {
                    "paddingBottom": 10,
                    "paddingLeft": 10,
                    "paddingRight": 10,
                    "paddingTop": 10,
                  },
                ]
              }
            >
              <Text>
                Yes, especially if you know JavaScript and React.
              </Text>
            </View>
          </View>
        </View>
      </View>
    </View>
    <Text
      style={
        [
          {
            "marginTop": 20,
          },
          {
            "fontSize": 24,
            "lineHeight": 32,
          },
        ]
      }
    >
      Benefits Of Using A Fitness Logger
    </Text>
    <View
      style={
        [
          {
            "paddingBottom": 10,
            "paddingLeft": 10,
            "paddingRight": 10,
            "paddingTop": 10,
          },
          {
            "width": 384,
          },
          {
            "marginBottom": 40,
          },
        ]
      }
    >
      <View>
        <View
          accessibilityState={
            {
              "busy": undefined,
              "checked": undefined,
              "disabled": undefined,
              "expanded": undefined,
              "selected": undefined,
            }
          }
          accessibilityValue={
            {
              "max": undefined,
              "min": undefined,
              "now": undefined,
              "text": undefined,
            }
          }
          accessible={true}
          collapsable={false}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            {
              "backgroundColor": "#F1F1F1",
              "borderBottomWidth": 1,
              "borderLeftWidth": 1,
              "borderRightWidth": 1,
              "borderTopWidth": 1,
              "opacity": 1,
              "paddingBottom": 15,
              "paddingLeft": 15,
              "paddingRight": 15,
              "paddingTop": 15,
            }
          }
        >
          <Text
            style={
              [
                {
                  "fontWeight": "700",
                },
              ]
            }
          >
            Enhanced Awareness of Activity Levels
          </Text>
        </View>
        <View
          collapsable={false}
          pointerEvents="none"
          style={
            {
              "height": 0,
              "overflow": "hidden",
            }
          }
        >
          <View
            collapsable={false}
            onLayout={[Function]}
            style={{}}
          >
            <View
              style={
                [
                  {
                    "paddingBottom": 10,
                    "paddingLeft": 10,
                    "paddingRight": 10,
                    "paddingTop": 10,
                  },
                ]
              }
            >
              <Text>
                This fitness tracker app help you gain a better understanding of your time spent being active. This insight can reveal gaps in your routine and help you to make healthier choices, ensuring you stay on track toward your fitness goals.
              </Text>
            </View>
          </View>
        </View>
      </View>
      <View>
        <View
          accessibilityState={
            {
              "busy": undefined,
              "checked": undefined,
              "disabled": undefined,
              "expanded": undefined,
              "selected": undefined,
            }
          }
          accessibilityValue={
            {
              "max": undefined,
              "min": undefined,
              "now": undefined,
              "text": undefined,
            }
          }
          accessible={true}
          collapsable={false}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            {
              "backgroundColor": "#F1F1F1",
              "borderBottomWidth": 1,
              "borderLeftWidth": 1,
              "borderRightWidth": 1,
              "borderTopWidth": 1,
              "opacity": 1,
              "paddingBottom": 15,
              "paddingLeft": 15,
              "paddingRight": 15,
              "paddingTop": 15,
            }
          }
        >
          <Text
            style={
              [
                {
                  "fontWeight": "700",
                },
              ]
            }
          >
            Personalized Goal Setting
          </Text>
        </View>
        <View
          collapsable={false}
          pointerEvents="none"
          style={
            {
              "height": 0,
              "overflow": "hidden",
            }
          }
        >
          <View
            collapsable={false}
            onLayout={[Function]}
            style={{}}
          >
            <View
              style={
                [
                  {
                    "paddingBottom": 10,
                    "paddingLeft": 10,
                    "paddingRight": 10,
                    "paddingTop": 10,
                  },
                ]
              }
            >
              <Text>
                With this fitness tracker app, you can set realistic and achievable fitness goals tailored to your current fitness level. Whether it’s completing a number of push-ups or increasing your weekly exercise minutes, these apps guide you with measurable objectives that help you progress steadily.
              </Text>
            </View>
          </View>
        </View>
      </View>
      <View>
        <View
          accessibilityState={
            {
              "busy": undefined,
              "checked": undefined,
              "disabled": undefined,
              "expanded": undefined,
              "selected": undefined,
            }
          }
          accessibilityValue={
            {
              "max": undefined,
              "min": undefined,
              "now": undefined,
              "text": undefined,
            }
          }
          accessible={true}
          collapsable={false}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            {
              "backgroundColor": "#F1F1F1",
              "borderBottomWidth": 1,
              "borderLeftWidth": 1,
              "borderRightWidth": 1,
              "borderTopWidth": 1,
              "opacity": 1,
              "paddingBottom": 15,
              "paddingLeft": 15,
              "paddingRight": 15,
              "paddingTop": 15,
            }
          }
        >
          <Text
            style={
              [
                {
                  "fontWeight": "700",
                },
              ]
            }
          >
            Building Discipline
          </Text>
        </View>
        <View
          collapsable={false}
          pointerEvents="none"
          style={
            {
              "height": 0,
              "overflow": "hidden",
            }
          }
        >
          <View
            collapsable={false}
            onLayout={[Function]}
            style={{}}
          >
            <View
              style={
                [
                  {
                    "paddingBottom": 10,
                    "paddingLeft": 10,
                    "paddingRight": 10,
                    "paddingTop": 10,
                  },
                ]
              }
            >
              <Text>
                Fitness tracker apps promote discipline by encouraging consistent effort over time. Progress charts keep you accountable, helping you establish a routine. Over time, this consistency strengthens your willpower and instills a habit of prioritizing physical activity.
              </Text>
            </View>
          </View>
        </View>
      </View>
      <View>
        <View
          accessibilityState={
            {
              "busy": undefined,
              "checked": undefined,
              "disabled": undefined,
              "expanded": undefined,
              "selected": undefined,
            }
          }
          accessibilityValue={
            {
              "max": undefined,
              "min": undefined,
              "now": undefined,
              "text": undefined,
            }
          }
          accessible={true}
          collapsable={false}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            {
              "backgroundColor": "#F1F1F1",
              "borderBottomWidth": 1,
              "borderLeftWidth": 1,
              "borderRightWidth": 1,
              "borderTopWidth": 1,
              "opacity": 1,
              "paddingBottom": 15,
              "paddingLeft": 15,
              "paddingRight": 15,
              "paddingTop": 15,
            }
          }
        >
          <Text
            style={
              [
                {
                  "fontWeight": "700",
                },
              ]
            }
          >
            Health Insights
          </Text>
        </View>
        <View
          collapsable={false}
          pointerEvents="none"
          style={
            {
              "height": 0,
              "overflow": "hidden",
            }
          }
        >
          <View
            collapsable={false}
            onLayout={[Function]}
            style={{}}
          >
            <View
              style={
                [
                  {
                    "paddingBottom": 10,
                    "paddingLeft": 10,
                    "paddingRight": 10,
                    "paddingTop": 10,
                  },
                ]
              }
            >
              <Text>
                Fitness trackers store your health data over time, providing valuable insights into trends in your fitness level. These records can be shared with healthcare providers to support better-informed medical decisions.
              </Text>
            </View>
          </View>
        </View>
      </View>
      <View>
        <View
          accessibilityState={
            {
              "busy": undefined,
              "checked": undefined,
              "disabled": undefined,
              "expanded": undefined,
              "selected": undefined,
            }
          }
          accessibilityValue={
            {
              "max": undefined,
              "min": undefined,
              "now": undefined,
              "text": undefined,
            }
          }
          accessible={true}
          collapsable={false}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            {
              "backgroundColor": "#F1F1F1",
              "borderBottomWidth": 1,
              "borderLeftWidth": 1,
              "borderRightWidth": 1,
              "borderTopWidth": 1,
              "opacity": 1,
              "paddingBottom": 15,
              "paddingLeft": 15,
              "paddingRight": 15,
              "paddingTop": 15,
            }
          }
        >
          <Text
            style={
              [
                {
                  "fontWeight": "700",
                },
              ]
            }
          >
            Progress Visualization
          </Text>
        </View>
        <View
          collapsable={false}
          pointerEvents="none"
          style={
            {
              "height": 0,
              "overflow": "hidden",
            }
          }
        >
          <View
            collapsable={false}
            onLayout={[Function]}
            style={{}}
          >
            <View
              style={
                [
                  {
                    "paddingBottom": 10,
                    "paddingLeft": 10,
                    "paddingRight": 10,
                    "paddingTop": 10,
                  },
                ]
              }
            >
              <Text>
                The visual representation of your progress—graphs, charts, and milestones—can be a powerful motivator. Seeing how far you’ve come reinforces positive behavior and encourages you to keep pushing toward your fitness goals.Improving fitness through a fitness tracker app is not just about physical health; it’s about building habits, enhancing awareness, and creating a sustainable lifestyle change.
              </Text>
            </View>
          </View>
        </View>
      </View>
    </View>
    <View
      style={
        {
          "alignItems": "center",
          "backgroundColor": "#D10000",
          "bottom": 0,
          "color": "#060606",
          "display": "flex",
          "flex": 1,
          "flexDirection": "row",
          "height": "auto",
          "justifyContent": "space-evenly",
          "paddingBottom": "1%",
          "paddingTop": "1%",
          "position": "absolute",
          "width": "100%",
        }
      }
    >
      <Text
        href="/"
        onPress={[Function]}
        role="link"
      >
        <Text
          allowFontScaling={false}
          selectable={false}
          style={
            [
              {
                "color": "black",
                "fontSize": 24,
              },
              undefined,
              {
                "fontFamily": "entypo",
                "fontStyle": "normal",
                "fontWeight": "normal",
              },
              {},
            ]
          }
        >
          
        </Text>
      </Text>
      <Text
        href="/"
        onPress={[Function]}
        role="link"
      >
        <Text
          allowFontScaling={false}
          selectable={false}
          style={
            [
              {
                "color": "black",
                "fontSize": 24,
              },
              undefined,
              {
                "fontFamily": "FontAwesome5Free-Solid",
                "fontStyle": "normal",
                "fontWeight": "normal",
              },
              {
                "fontWeight": "700",
              },
            ]
          }
        >
          
        </Text>
      </Text>
      <Text
        href="/"
        onPress={[Function]}
        role="link"
      >
        <Text
          allowFontScaling={false}
          selectable={false}
          style={
            [
              {
                "color": "black",
                "fontSize": 24,
              },
              undefined,
              {
                "fontFamily": "anticon",
                "fontStyle": "normal",
                "fontWeight": "normal",
              },
              {},
            ]
          }
        >
          
        </Text>
      </Text>
      <Text
        href="/"
        onPress={[Function]}
        role="link"
      >
        <Text
          allowFontScaling={false}
          selectable={false}
          style={
            [
              {
                "color": "black",
                "fontSize": 24,
              },
              undefined,
              {
                "fontFamily": "material-community",
                "fontStyle": "normal",
                "fontWeight": "normal",
              },
              {},
            ]
          }
        >
          󰄪
        </Text>
      </Text>
      <Text
        href="/"
        onPress={[Function]}
        role="link"
      >
        <Text
          allowFontScaling={false}
          selectable={false}
          style={
            [
              {
                "color": "black",
                "fontSize": 24,
              },
              undefined,
              {
                "fontFamily": "feather",
                "fontStyle": "normal",
                "fontWeight": "normal",
              },
              {},
            ]
          }
        >
          
        </Text>
      </Text>
    </View>
  </View>
</RCTScrollView>
`;

exports[`log-workout.js Test 1`] = `
<RCTScrollView
  style={
    {
      "backgroundColor": "#F1F1F1",
    }
  }
>
  <View>
    <View
      style={
        [
          {
            "alignItems": "center",
          },
          {
            "marginBottom": 5,
            "marginLeft": 5,
            "marginRight": 5,
            "marginTop": 5,
          },
        ]
      }
    >
      <Text
        style={
          [
            {
              "fontSize": 20,
              "lineHeight": 28,
            },
            {
              "color": "#060606",
            },
          ]
        }
      >
        Workout Name
      </Text>
      <TextInput
        onBlur={[Function]}
        onChangeText={[Function]}
        style={
          [
            {
              "textAlign": "center",
            },
            {
              "width": "91.666667%",
            },
            {
              "flexBasis": "0%",
              "flexGrow": 1,
              "flexShrink": 1,
            },
            {
              "marginBottom": 10,
              "marginLeft": 10,
              "marginRight": 10,
              "marginTop": 10,
            },
            {
              "backgroundColor": "#DEDEDE",
            },
          ]
        }
      />
      <Text
        style={
          [
            {
              "fontSize": 20,
              "lineHeight": 28,
            },
            {
              "color": "#060606",
            },
          ]
        }
      >
        Workout Notes
      </Text>
      <TextInput
        multiline={true}
        numberOfLines={3}
        onBlur={[Function]}
        onChangeText={[Function]}
        style={
          [
            {
              "textAlign": "center",
            },
            {
              "width": "91.666667%",
            },
            {
              "flexBasis": "0%",
              "flexGrow": 1,
              "flexShrink": 1,
            },
            {
              "marginBottom": 10,
              "marginLeft": 10,
              "marginRight": 10,
              "marginTop": 10,
            },
            {
              "backgroundColor": "#DEDEDE",
            },
          ]
        }
      />
      <Text
        style={
          [
            {
              "fontSize": 20,
              "lineHeight": 28,
            },
            {
              "marginTop": 30,
            },
            {
              "color": "#060606",
            },
          ]
        }
      >
        Exercises
      </Text>
      <View
        style={
          [
            {
              "alignItems": "center",
            },
            {
              "display": "flex",
            },
            {
              "justifyContent": "center",
            },
          ]
        }
      />
      <View
        accessibilityState={
          {
            "busy": undefined,
            "checked": undefined,
            "disabled": undefined,
            "expanded": undefined,
            "selected": undefined,
          }
        }
        accessibilityValue={
          {
            "max": undefined,
            "min": undefined,
            "now": undefined,
            "text": undefined,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          {
            "backgroundColor": "#2296f3",
            "marginBottom": 5,
            "marginLeft": 5,
            "marginRight": 5,
            "marginTop": 5,
            "opacity": 1,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
          }
        }
      >
        <Text
          style={
            [
              {
                "fontWeight": "700",
              },
              {
                "fontSize": 16,
              },
              {
                "color": "#F1F1F1",
              },
            ]
          }
        >
          Add Exercise
        </Text>
      </View>
      <View
        style={
          [
            {
              "marginTop": 40,
            },
          ]
        }
      >
        <Text
          style={
            [
              {
                "fontSize": 20,
                "lineHeight": 28,
              },
              {
                "textAlign": "center",
              },
              {
                "color": "#060606",
              },
            ]
          }
        >
          Muscles Worked
        </Text>
        <Text
          style={
            [
              {
                "textAlign": "center",
              },
            ]
          }
        />
        <Text
          style={
            [
              {
                "fontSize": 20,
                "lineHeight": 28,
              },
              {
                "textAlign": "center",
              },
              {
                "marginTop": 20,
              },
              {
                "color": "#060606",
              },
            ]
          }
        >
          Muscles Not Worked
        </Text>
        <Text
          style={
            [
              {
                "textAlign": "center",
              },
            ]
          }
        >
          Pectorals, Upper back, Lower back, Deltoids, Biceps, Triceps, Quadriceps, Hamstrings, Glutes, Calves, Abs, Obliques, Cardio
        </Text>
      </View>
      <View
        accessibilityState={
          {
            "busy": undefined,
            "checked": undefined,
            "disabled": undefined,
            "expanded": undefined,
            "selected": undefined,
          }
        }
        accessibilityValue={
          {
            "max": undefined,
            "min": undefined,
            "now": undefined,
            "text": undefined,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          {
            "backgroundColor": "#2296f3",
            "marginBottom": 5,
            "marginLeft": 5,
            "marginRight": 5,
            "marginTop": 5,
            "opacity": 1,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
          }
        }
      >
        <Text
          style={
            [
              {
                "fontWeight": "700",
              },
              {
                "fontSize": 16,
              },
              {
                "color": "#F1F1F1",
              },
            ]
          }
        >
          Submit
        </Text>
      </View>
      <View
        accessibilityState={
          {
            "busy": undefined,
            "checked": undefined,
            "disabled": undefined,
            "expanded": undefined,
            "selected": undefined,
          }
        }
        accessibilityValue={
          {
            "max": undefined,
            "min": undefined,
            "now": undefined,
            "text": undefined,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          {
            "backgroundColor": "#00008b",
            "marginBottom": 5,
            "marginLeft": 5,
            "marginRight": 5,
            "marginTop": 5,
            "opacity": 1,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
          }
        }
      >
        <Text
          style={
            [
              {
                "fontWeight": "700",
              },
              {
                "fontSize": 16,
              },
              {
                "color": "#F1F1F1",
              },
            ]
          }
        >
          Reset Form
        </Text>
      </View>
    </View>
  </View>
</RCTScrollView>
`;

exports[`report-feedback.js Test 1`] = `
<RCTScrollView
  style={
    {
      "backgroundColor": "#F1F1F1",
    }
  }
>
  <View>
    <TextInput
      onChangeText={[Function]}
      placeholder="Title"
      style={
        [
          {
            "textAlign": "center",
          },
          {
            "width": "91.666667%",
          },
          {
            "height": 48,
          },
          {
            "flexBasis": "0%",
            "flexGrow": 1,
            "flexShrink": 1,
          },
          {
            "marginBottom": 10,
            "marginLeft": 10,
            "marginRight": 10,
            "marginTop": 10,
          },
          {
            "borderBottomWidth": 0,
            "borderLeftWidth": 0,
            "borderRightWidth": 0,
            "borderTopWidth": 0,
          },
          {
            "backgroundColor": "#DEDEDE",
          },
        ]
      }
      value=""
    />
    <TextInput
      multiline={true}
      onChangeText={[Function]}
      placeholder="Description"
      style={
        [
          {
            "textAlign": "center",
          },
          {
            "width": "91.666667%",
          },
          {
            "height": 48,
          },
          {
            "flexBasis": "0%",
            "flexGrow": 1,
            "flexShrink": 1,
          },
          {
            "marginBottom": 10,
            "marginLeft": 10,
            "marginRight": 10,
            "marginTop": 10,
          },
          {
            "borderBottomColor": "transparent",
            "borderLeftColor": "transparent",
            "borderRightColor": "transparent",
            "borderTopColor": "transparent",
          },
          {
            "backgroundColor": "#DEDEDE",
          },
        ]
      }
      value=""
    />
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": undefined,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "backgroundColor": "#FF0000",
          "marginTop": 15,
          "opacity": 1,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
        }
      }
    >
      <Text
        style={
          [
            {
              "fontWeight": "700",
            },
            {
              "fontSize": 30,
              "lineHeight": 36,
            },
            {
              "textAlign": "center",
            },
            {
              "color": "#060606",
            },
          ]
        }
      >
        Send Email
      </Text>
    </View>
  </View>
</RCTScrollView>
`;

exports[`set-goal.js Test 1`] = `
<RCTScrollView
  style={
    {
      "backgroundColor": "#F1F1F1",
    }
  }
>
  <View>
    <View
      style={
        [
          {
            "alignItems": "center",
          },
          {
            "marginBottom": 5,
            "marginLeft": 5,
            "marginRight": 5,
            "marginTop": 5,
          },
        ]
      }
    >
      <View
        style={
          [
            {
              "flexDirection": "row",
            },
            {
              "alignItems": "center",
            },
          ]
        }
      >
        <Text
          style={
            [
              {
                "marginRight": 16,
              },
              {
                "width": 64,
              },
              {
                "color": "#000000",
              },
            ]
          }
        >
          Name
        </Text>
        <TextInput
          onBlur={[Function]}
          onChangeText={[Function]}
          style={
            [
              {
                "textAlign": "center",
              },
              {
                "width": "91.666667%",
              },
              {
                "flexBasis": "0%",
                "flexGrow": 1,
                "flexShrink": 1,
              },
              {
                "marginBottom": 10,
                "marginLeft": 10,
                "marginRight": 10,
                "marginTop": 10,
              },
              {
                "backgroundColor": "#DEDEDE",
              },
            ]
          }
        />
      </View>
      <View
        style={
          [
            {
              "flexDirection": "row",
            },
            {
              "alignItems": "center",
            },
          ]
        }
      >
        <Text
          style={
            [
              {
                "marginRight": 16,
              },
              {
                "width": 64,
              },
              {
                "color": "#000000",
              },
            ]
          }
        >
          Goal
        </Text>
        <View
          style={
            {
              "padding": 16,
            }
          }
        >
          <View
            onLayout={[Function]}
            style={
              {
                "backgroundColor": "#DEDEDE",
                "borderColor": "gray",
                "borderRadius": 8,
                "borderWidth": 1,
                "flexBasis": "0%",
                "flexGrow": 1,
                "flexShrink": 1,
                "height": 50,
                "justifyContent": "center",
                "paddingHorizontal": 8,
                "textAlign": "center",
                "width": 260,
              }
            }
          >
            <View
              accessibilityState={
                {
                  "busy": undefined,
                  "checked": undefined,
                  "disabled": undefined,
                  "expanded": undefined,
                  "selected": undefined,
                }
              }
              accessible={false}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                {
                  "alignItems": "center",
                  "flexDirection": "row",
                  "justifyContent": "space-between",
                }
              }
            >
              <Text
                style={
                  [
                    {
                      "flex": 1,
                      "fontSize": 16,
                      "writingDirection": "ltr",
                    },
                    {
                      "color": "#060606",
                    },
                    {},
                  ]
                }
              >
                Select an option
              </Text>
              <Image
                source={1}
                style={
                  {
                    "height": 20,
                    "tintColor": "gray",
                    "width": 20,
                  }
                }
              />
            </View>
          </View>
        </View>
      </View>
      <View
        style={
          [
            {
              "flexDirection": "row",
            },
            {
              "alignItems": "center",
            },
          ]
        }
      >
        <Text
          style={
            [
              {
                "marginRight": 16,
              },
              {
                "width": 64,
              },
              {
                "color": "#000000",
              },
            ]
          }
        >
          New Goal Value
        </Text>
        <TextInput
          keyboardType="numeric"
          onBlur={[Function]}
          onChangeText={[Function]}
          style={
            [
              {
                "textAlign": "center",
              },
              {
                "width": "91.666667%",
              },
              {
                "flexBasis": "0%",
                "flexGrow": 1,
                "flexShrink": 1,
              },
              {
                "marginBottom": 10,
                "marginLeft": 10,
                "marginRight": 10,
                "marginTop": 10,
              },
              {
                "backgroundColor": "#DEDEDE",
              },
            ]
          }
        />
      </View>
      <View
        style={
          [
            {
              "flexDirection": "row",
            },
            {
              "alignItems": "center",
            },
          ]
        }
      >
        <Text
          style={
            [
              {
                "marginRight": 16,
              },
              {
                "width": 64,
              },
              {
                "color": "#000000",
              },
            ]
          }
        >
          Start Date
        </Text>
        <View
          accessibilityState={
            {
              "busy": undefined,
              "checked": undefined,
              "disabled": undefined,
              "expanded": undefined,
              "selected": undefined,
            }
          }
          accessibilityValue={
            {
              "max": undefined,
              "min": undefined,
              "now": undefined,
              "text": undefined,
            }
          }
          accessible={true}
          collapsable={false}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            {
              "backgroundColor": "#DEDEDE",
              "flexBasis": "0%",
              "flexGrow": 1,
              "flexShrink": 1,
              "marginBottom": 10,
              "marginLeft": 10,
              "marginRight": 10,
              "marginTop": 10,
              "opacity": 1,
              "paddingBottom": 8,
              "paddingLeft": 8,
              "paddingRight": 8,
              "paddingTop": 8,
              "textAlign": "center",
              "width": "91.666667%",
            }
          }
        >
          <Text
            style={
              [
                {
                  "fontWeight": "700",
                },
                {
                  "fontSize": 16,
                },
                {
                  "color": "#060606",
                },
              ]
            }
          >
            21/10/2024
          </Text>
        </View>
      </View>
      <View
        style={
          [
            {
              "flexDirection": "row",
            },
            {
              "alignItems": "center",
            },
          ]
        }
      >
        <Text
          style={
            [
              {
                "marginRight": 16,
              },
              {
                "width": 64,
              },
              {
                "color": "#000000",
              },
            ]
          }
        >
          End Date
        </Text>
        <View
          accessibilityState={
            {
              "busy": undefined,
              "checked": undefined,
              "disabled": undefined,
              "expanded": undefined,
              "selected": undefined,
            }
          }
          accessibilityValue={
            {
              "max": undefined,
              "min": undefined,
              "now": undefined,
              "text": undefined,
            }
          }
          accessible={true}
          collapsable={false}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            {
              "backgroundColor": "#DEDEDE",
              "flexBasis": "0%",
              "flexGrow": 1,
              "flexShrink": 1,
              "marginBottom": 10,
              "marginLeft": 10,
              "marginRight": 10,
              "marginTop": 10,
              "opacity": 1,
              "paddingBottom": 8,
              "paddingLeft": 8,
              "paddingRight": 8,
              "paddingTop": 8,
              "textAlign": "center",
              "width": "91.666667%",
            }
          }
        >
          <Text
            style={
              [
                {
                  "fontWeight": "700",
                },
                {
                  "fontSize": 16,
                },
                {
                  "color": "#060606",
                },
              ]
            }
          >
            21/10/2024
          </Text>
        </View>
      </View>
      <View
        style={
          [
            {
              "flexDirection": "row",
            },
            {
              "alignItems": "center",
            },
          ]
        }
      >
        <Text
          style={
            [
              {
                "marginRight": 16,
              },
              {
                "width": 64,
              },
              {
                "color": "#000000",
              },
            ]
          }
        >
          Reminder Date
        </Text>
        <View
          accessibilityState={
            {
              "busy": undefined,
              "checked": undefined,
              "disabled": undefined,
              "expanded": undefined,
              "selected": undefined,
            }
          }
          accessibilityValue={
            {
              "max": undefined,
              "min": undefined,
              "now": undefined,
              "text": undefined,
            }
          }
          accessible={true}
          collapsable={false}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            {
              "backgroundColor": "#DEDEDE",
              "flexBasis": "0%",
              "flexGrow": 1,
              "flexShrink": 1,
              "marginBottom": 10,
              "marginLeft": 10,
              "marginRight": 10,
              "marginTop": 10,
              "opacity": 1,
              "paddingBottom": 8,
              "paddingLeft": 8,
              "paddingRight": 8,
              "paddingTop": 8,
              "textAlign": "center",
              "width": "91.666667%",
            }
          }
        >
          <Text
            style={
              [
                {
                  "fontWeight": "700",
                },
                {
                  "fontSize": 16,
                },
                {
                  "color": "#060606",
                },
              ]
            }
          >
            21/10/2024
          </Text>
        </View>
      </View>
      <View
        style={
          [
            {
              "flexDirection": "row",
            },
            {
              "alignItems": "center",
            },
          ]
        }
      >
        <Text
          style={
            [
              {
                "marginRight": 16,
              },
              {
                "width": 64,
              },
              {
                "color": "#000000",
              },
            ]
          }
        >
          Additional Notes
        </Text>
        <TextInput
          numberOfLines={5}
          onBlur={[Function]}
          onChangeText={[Function]}
          style={
            [
              {
                "textAlign": "center",
              },
              {
                "width": "91.666667%",
              },
              {
                "flexBasis": "0%",
                "flexGrow": 1,
                "flexShrink": 1,
              },
              {
                "marginBottom": 10,
                "marginLeft": 10,
                "marginRight": 10,
                "marginTop": 10,
              },
              {
                "backgroundColor": "#DEDEDE",
              },
            ]
          }
        />
      </View>
      <View
        accessibilityState={
          {
            "busy": undefined,
            "checked": undefined,
            "disabled": undefined,
            "expanded": undefined,
            "selected": undefined,
          }
        }
        accessibilityValue={
          {
            "max": undefined,
            "min": undefined,
            "now": undefined,
            "text": undefined,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          {
            "backgroundColor": "#FF0000",
            "marginTop": 15,
            "opacity": 1,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
          }
        }
      >
        <Text
          style={
            [
              {
                "fontWeight": "700",
              },
              {
                "fontSize": 20,
                "lineHeight": 28,
              },
              {
                "color": "#060606",
              },
            ]
          }
        >
          Submit
        </Text>
      </View>
    </View>
  </View>
</RCTScrollView>
`;

exports[`settings.js Test 1`] = `
<RCTScrollView
  style={
    {
      "backgroundColor": "#F1F1F1",
    }
  }
>
  <View>
    <View
      style={
        [
          {
            "alignItems": "center",
          },
          {
            "marginBottom": 5,
            "marginLeft": 5,
            "marginRight": 5,
            "marginTop": 5,
          },
        ]
      }
    >
      <View
        style={
          [
            {
              "flexDirection": "row",
            },
            {
              "alignItems": "center",
            },
          ]
        }
      >
        <Text
          style={
            [
              {
                "fontSize": 20,
                "lineHeight": 28,
              },
              {
                "color": "#060606",
              },
            ]
          }
        >
          Theme
        </Text>
        <View
          style={
            {
              "padding": 16,
            }
          }
        >
          <View
            onLayout={[Function]}
            style={
              {
                "borderColor": "gray",
                "borderRadius": 8,
                "borderWidth": 1,
                "height": 50,
                "justifyContent": "center",
                "paddingHorizontal": 8,
                "width": 200,
              }
            }
          >
            <View
              accessibilityState={
                {
                  "busy": undefined,
                  "checked": undefined,
                  "disabled": undefined,
                  "expanded": undefined,
                  "selected": undefined,
                }
              }
              accessible={false}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                {
                  "alignItems": "center",
                  "flexDirection": "row",
                  "justifyContent": "space-between",
                }
              }
            >
              <Text
                style={
                  [
                    {
                      "flex": 1,
                      "fontSize": 16,
                      "writingDirection": "ltr",
                    },
                    {
                      "color": "#060606",
                    },
                    {},
                  ]
                }
              >
                Select an option
              </Text>
              <Image
                source={1}
                style={
                  {
                    "height": 20,
                    "tintColor": "gray",
                    "width": 20,
                  }
                }
              />
            </View>
          </View>
        </View>
      </View>
      <View
        style={
          [
            {
              "flexDirection": "row",
            },
            {
              "alignItems": "center",
            },
          ]
        }
      >
        <Text
          style={
            [
              {
                "fontSize": 20,
                "lineHeight": 28,
              },
              {
                "color": "#060606",
              },
            ]
          }
        >
          Weight
        </Text>
        <View
          style={
            {
              "padding": 16,
            }
          }
        >
          <View
            onLayout={[Function]}
            style={
              {
                "borderColor": "gray",
                "borderRadius": 8,
                "borderWidth": 1,
                "height": 50,
                "justifyContent": "center",
                "paddingHorizontal": 8,
                "width": 200,
              }
            }
          >
            <View
              accessibilityState={
                {
                  "busy": undefined,
                  "checked": undefined,
                  "disabled": undefined,
                  "expanded": undefined,
                  "selected": undefined,
                }
              }
              accessible={false}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                {
                  "alignItems": "center",
                  "flexDirection": "row",
                  "justifyContent": "space-between",
                }
              }
            >
              <Text
                style={
                  [
                    {
                      "flex": 1,
                      "fontSize": 16,
                      "writingDirection": "ltr",
                    },
                    {
                      "color": "#060606",
                    },
                    {},
                  ]
                }
              >
                Select an option
              </Text>
              <Image
                source={1}
                style={
                  {
                    "height": 20,
                    "tintColor": "gray",
                    "width": 20,
                  }
                }
              />
            </View>
          </View>
        </View>
      </View>
      <View
        style={
          [
            {
              "flexDirection": "row",
            },
            {
              "alignItems": "center",
            },
          ]
        }
      >
        <Text
          style={
            [
              {
                "fontSize": 20,
                "lineHeight": 28,
              },
              {
                "color": "#060606",
              },
            ]
          }
        >
          Distance
        </Text>
        <View
          style={
            {
              "padding": 16,
            }
          }
        >
          <View
            onLayout={[Function]}
            style={
              {
                "borderColor": "gray",
                "borderRadius": 8,
                "borderWidth": 1,
                "height": 50,
                "justifyContent": "center",
                "paddingHorizontal": 8,
                "width": 200,
              }
            }
          >
            <View
              accessibilityState={
                {
                  "busy": undefined,
                  "checked": undefined,
                  "disabled": undefined,
                  "expanded": undefined,
                  "selected": undefined,
                }
              }
              accessible={false}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                {
                  "alignItems": "center",
                  "flexDirection": "row",
                  "justifyContent": "space-between",
                }
              }
            >
              <Text
                style={
                  [
                    {
                      "flex": 1,
                      "fontSize": 16,
                      "writingDirection": "ltr",
                    },
                    {
                      "color": "#060606",
                    },
                    {},
                  ]
                }
              >
                Select an option
              </Text>
              <Image
                source={1}
                style={
                  {
                    "height": 20,
                    "tintColor": "gray",
                    "width": 20,
                  }
                }
              />
            </View>
          </View>
        </View>
      </View>
      <View
        accessibilityState={
          {
            "busy": undefined,
            "checked": undefined,
            "disabled": undefined,
            "expanded": undefined,
            "selected": undefined,
          }
        }
        accessibilityValue={
          {
            "max": undefined,
            "min": undefined,
            "now": undefined,
            "text": undefined,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={false}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          {
            "alignItems": "center",
            "backgroundColor": "#FF0000",
            "marginTop": 15,
            "opacity": 1,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
            "width": 224,
          }
        }
      >
        <Text
          style={
            [
              {
                "fontWeight": "700",
              },
              {
                "fontSize": 20,
                "lineHeight": 28,
              },
              {
                "color": "#060606",
              },
            ]
          }
        >
          Sync With Drive
        </Text>
      </View>
      <View
        accessibilityState={
          {
            "busy": undefined,
            "checked": undefined,
            "disabled": undefined,
            "expanded": undefined,
            "selected": undefined,
          }
        }
        accessibilityValue={
          {
            "max": undefined,
            "min": undefined,
            "now": undefined,
            "text": undefined,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          {
            "alignItems": "center",
            "backgroundColor": "#FF0000",
            "marginTop": 15,
            "opacity": 1,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
            "width": 224,
          }
        }
      >
        <Text
          style={
            [
              {
                "fontWeight": "700",
              },
              {
                "fontSize": 20,
                "lineHeight": 28,
              },
              {
                "color": "#060606",
              },
            ]
          }
        >
          Report Feedback
        </Text>
      </View>
      <View
        accessibilityState={
          {
            "busy": undefined,
            "checked": undefined,
            "disabled": undefined,
            "expanded": undefined,
            "selected": undefined,
          }
        }
        accessibilityValue={
          {
            "max": undefined,
            "min": undefined,
            "now": undefined,
            "text": undefined,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          {
            "alignItems": "center",
            "backgroundColor": "#FF0000",
            "marginTop": 15,
            "opacity": 1,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
            "width": 224,
          }
        }
      >
        <Text
          style={
            [
              {
                "fontWeight": "700",
              },
              {
                "fontSize": 20,
                "lineHeight": 28,
              },
              {
                "color": "#060606",
              },
            ]
          }
        >
          How To Use The App
        </Text>
      </View>
    </View>
  </View>
</RCTScrollView>
`;

exports[`statistics.js Test 1`] = `
<RCTScrollView
  contentContainerStyle={
    {
      "paddingBottom": 30,
    }
  }
  style={
    {
      "backgroundColor": "#F1F1F1",
      "flex": 1,
      "padding": 16,
      "paddingTop": 30,
    }
  }
>
  <View>
    <Text>
      Number of workouts completed: 
      0
    </Text>
    <Text>
      Number of exercises completed: 
      0
    </Text>
    <Text>
      Number of exercises measured by Reps completed: 
      0
    </Text>
    <Text>
      Number of exercises measured by Weight and Reps completed: 
      0
    </Text>
    <Text>
      Number of exercises measured by Distance and Time completed: 
      0
    </Text>
    <Text>
      Average number of exercises per workout: 
      0
    </Text>
    <Text
      style={
        {
          "fontSize": 30,
          "fontWeight": "bold",
          "marginTop": 30,
        }
      }
    >
      Reps
    </Text>
    <View
      style={
        {
          "alignItems": "center",
          "justifyContent": "center",
        }
      }
    >
      <View
        style={
          {
            "borderRadius": 16,
            "marginVertical": 8,
          }
        }
      >
        <RNSVGSvgView
          bbHeight={220}
          bbWidth={675}
          focusable={false}
          height={220}
          style={
            [
              {
                "backgroundColor": "transparent",
                "borderWidth": 0,
              },
              {
                "flex": 0,
                "height": 220,
                "width": 675,
              },
            ]
          }
          width={675}
        >
          <RNSVGGroup
            fill={
              {
                "payload": 4278190080,
                "type": 0,
              }
            }
          >
            <RNSVGRect
              fill={
                {
                  "brushRef": "backgroundGradient",
                  "type": 1,
                }
              }
              fillOpacity={1}
              height={220}
              propList={
                [
                  "fill",
                  "fillOpacity",
                ]
              }
              rx={16}
              ry={16}
              width="100%"
              x={0}
              y={0}
            />
            <RNSVGGroup
              fill={
                {
                  "payload": 4278190080,
                  "type": 0,
                }
              }
              matrix={
                [
                  1,
                  0,
                  0,
                  1,
                  0,
                  0,
                ]
              }
            >
              <RNSVGDefs>
                <RNSVGLinearGradient
                  gradient={
                    [
                      0,
                      -32897,
                      1,
                      -2359296,
                    ]
                  }
                  gradientTransform={null}
                  gradientUnits={1}
                  name="backgroundGradient"
                  x1={0}
                  x2={675}
                  y1={220}
                  y2={0}
                />
                <RNSVGLinearGradient
                  gradient={
                    [
                      0,
                      436207616,
                      1,
                      436207616,
                    ]
                  }
                  gradientTransform={null}
                  gradientUnits={1}
                  name="fillShadowGradientFrom"
                  x1={0}
                  x2={0}
                  y1={0}
                  y2={220}
                />
              </RNSVGDefs>
              <RNSVGGroup
                fill={
                  {
                    "payload": 4278190080,
                    "type": 0,
                  }
                }
              >
                <RNSVGLine
                  fill={
                    {
                      "payload": 4278190080,
                      "type": 0,
                    }
                  }
                  propList={
                    [
                      "stroke",
                      "strokeWidth",
                      "strokeDasharray",
                    ]
                  }
                  stroke={
                    {
                      "payload": 4278190080,
                      "type": 0,
                    }
                  }
                  strokeDasharray={
                    [
                      "5",
                      "10",
                    ]
                  }
                  strokeWidth={1}
                  x1={64}
                  x2={675}
                  y1={16}
                  y2={16}
                />
                <RNSVGLine
                  fill={
                    {
                      "payload": 4278190080,
                      "type": 0,
                    }
                  }
                  propList={
                    [
                      "stroke",
                      "strokeWidth",
                      "strokeDasharray",
                    ]
                  }
                  stroke={
                    {
                      "payload": 4278190080,
                      "type": 0,
                    }
                  }
                  strokeDasharray={
                    [
                      "5",
                      "10",
                    ]
                  }
                  strokeWidth={1}
                  x1={64}
                  x2={675}
                  y1={57.25}
                  y2={57.25}
                />
                <RNSVGLine
                  fill={
                    {
                      "payload": 4278190080,
                      "type": 0,
                    }
                  }
                  propList={
                    [
                      "stroke",
                      "strokeWidth",
                      "strokeDasharray",
                    ]
                  }
                  stroke={
                    {
                      "payload": 4278190080,
                      "type": 0,
                    }
                  }
                  strokeDasharray={
                    [
                      "5",
                      "10",
                    ]
                  }
                  strokeWidth={1}
                  x1={64}
                  x2={675}
                  y1={98.5}
                  y2={98.5}
                />
                <RNSVGLine
                  fill={
                    {
                      "payload": 4278190080,
                      "type": 0,
                    }
                  }
                  propList={
                    [
                      "stroke",
                      "strokeWidth",
                      "strokeDasharray",
                    ]
                  }
                  stroke={
                    {
                      "payload": 4278190080,
                      "type": 0,
                    }
                  }
                  strokeDasharray={
                    [
                      "5",
                      "10",
                    ]
                  }
                  strokeWidth={1}
                  x1={64}
                  x2={675}
                  y1={139.75}
                  y2={139.75}
                />
                <RNSVGLine
                  fill={
                    {
                      "payload": 4278190080,
                      "type": 0,
                    }
                  }
                  propList={
                    [
                      "stroke",
                      "strokeWidth",
                      "strokeDasharray",
                    ]
                  }
                  stroke={
                    {
                      "payload": 4278190080,
                      "type": 0,
                    }
                  }
                  strokeDasharray={
                    [
                      "5",
                      "10",
                    ]
                  }
                  strokeWidth={1}
                  x1={64}
                  x2={675}
                  y1={181}
                  y2={181}
                />
              </RNSVGGroup>
              <RNSVGGroup
                fill={
                  {
                    "payload": 4278190080,
                    "type": 0,
                  }
                }
              >
                <RNSVGText
                  content={null}
                  dx={[]}
                  dy={[]}
                  fill={
                    {
                      "payload": 4278190080,
                      "type": 0,
                    }
                  }
                  font={
                    {
                      "fontSize": 12,
                      "textAnchor": "end",
                    }
                  }
                  matrix={
                    [
                      1,
                      0,
                      -0,
                      1,
                      0,
                      0,
                    ]
                  }
                  propList={
                    [
                      "fill",
                    ]
                  }
                  rotate={[]}
                  x={
                    [
                      52,
                    ]
                  }
                  y={
                    [
                      181,
                    ]
                  }
                >
                  <RNSVGTSpan
                    content="0.00"
                    dx={[]}
                    dy={[]}
                    fill={
                      {
                        "payload": 4278190080,
                        "type": 0,
                      }
                    }
                    font={{}}
                    rotate={[]}
                    x={[]}
                    y={[]}
                  />
                </RNSVGText>
                <RNSVGText
                  content={null}
                  dx={[]}
                  dy={[]}
                  fill={
                    {
                      "payload": 4278190080,
                      "type": 0,
                    }
                  }
                  font={
                    {
                      "fontSize": 12,
                      "textAnchor": "end",
                    }
                  }
                  matrix={
                    [
                      1,
                      0,
                      -0,
                      1,
                      0,
                      0,
                    ]
                  }
                  propList={
                    [
                      "fill",
                    ]
                  }
                  rotate={[]}
                  x={
                    [
                      52,
                    ]
                  }
                  y={
                    [
                      139.75,
                    ]
                  }
                >
                  <RNSVGTSpan
                    content="0.25"
                    dx={[]}
                    dy={[]}
                    fill={
                      {
                        "payload": 4278190080,
                        "type": 0,
                      }
                    }
                    font={{}}
                    rotate={[]}
                    x={[]}
                    y={[]}
                  />
                </RNSVGText>
                <RNSVGText
                  content={null}
                  dx={[]}
                  dy={[]}
                  fill={
                    {
                      "payload": 4278190080,
                      "type": 0,
                    }
                  }
                  font={
                    {
                      "fontSize": 12,
                      "textAnchor": "end",
                    }
                  }
                  matrix={
                    [
                      1,
                      0,
                      -0,
                      1,
                      0,
                      0,
                    ]
                  }
                  propList={
                    [
                      "fill",
                    ]
                  }
                  rotate={[]}
                  x={
                    [
                      52,
                    ]
                  }
                  y={
                    [
                      98.5,
                    ]
                  }
                >
                  <RNSVGTSpan
                    content="0.50"
                    dx={[]}
                    dy={[]}
                    fill={
                      {
                        "payload": 4278190080,
                        "type": 0,
                      }
                    }
                    font={{}}
                    rotate={[]}
                    x={[]}
                    y={[]}
                  />
                </RNSVGText>
                <RNSVGText
                  content={null}
                  dx={[]}
                  dy={[]}
                  fill={
                    {
                      "payload": 4278190080,
                      "type": 0,
                    }
                  }
                  font={
                    {
                      "fontSize": 12,
                      "textAnchor": "end",
                    }
                  }
                  matrix={
                    [
                      1,
                      0,
                      -0,
                      1,
                      0,
                      0,
                    ]
                  }
                  propList={
                    [
                      "fill",
                    ]
                  }
                  rotate={[]}
                  x={
                    [
                      52,
                    ]
                  }
                  y={
                    [
                      57.25,
                    ]
                  }
                >
                  <RNSVGTSpan
                    content="0.75"
                    dx={[]}
                    dy={[]}
                    fill={
                      {
                        "payload": 4278190080,
                        "type": 0,
                      }
                    }
                    font={{}}
                    rotate={[]}
                    x={[]}
                    y={[]}
                  />
                </RNSVGText>
                <RNSVGText
                  content={null}
                  dx={[]}
                  dy={[]}
                  fill={
                    {
                      "payload": 4278190080,
                      "type": 0,
                    }
                  }
                  font={
                    {
                      "fontSize": 12,
                      "textAnchor": "end",
                    }
                  }
                  matrix={
                    [
                      1,
                      0,
                      -0,
                      1,
                      0,
                      0,
                    ]
                  }
                  propList={
                    [
                      "fill",
                    ]
                  }
                  rotate={[]}
                  x={
                    [
                      52,
                    ]
                  }
                  y={
                    [
                      16,
                    ]
                  }
                >
                  <RNSVGTSpan
                    content="1.00"
                    dx={[]}
                    dy={[]}
                    fill={
                      {
                        "payload": 4278190080,
                        "type": 0,
                      }
                    }
                    font={{}}
                    rotate={[]}
                    x={[]}
                    y={[]}
                  />
                </RNSVGText>
              </RNSVGGroup>
              <RNSVGGroup
                fill={
                  {
                    "payload": 4278190080,
                    "type": 0,
                  }
                }
              />
              <RNSVGGroup
                fill={
                  {
                    "payload": 4278190080,
                    "type": 0,
                  }
                }
              />
              <RNSVGGroup
                fill={
                  {
                    "payload": 4278190080,
                    "type": 0,
                  }
                }
              >
                <RNSVGPath
                  d="M0,0"
                  fill={null}
                  propList={
                    [
                      "fill",
                      "stroke",
                      "strokeWidth",
                    ]
                  }
                  stroke={
                    {
                      "payload": 4278190080,
                      "type": 0,
                    }
                  }
                  strokeWidth={2}
                />
              </RNSVGGroup>
              <RNSVGGroup
                fill={
                  {
                    "payload": 4278190080,
                    "type": 0,
                  }
                }
              >
                <RNSVGPath
                  d="M0,0 L-Infinity,181 L64,181 Z"
                  fill={
                    {
                      "brushRef": "fillShadowGradientFrom",
                      "type": 1,
                    }
                  }
                  propList={
                    [
                      "fill",
                      "strokeWidth",
                    ]
                  }
                  strokeWidth={0}
                />
              </RNSVGGroup>
              <RNSVGGroup
                fill={
                  {
                    "payload": 4278190080,
                    "type": 0,
                  }
                }
              />
              <RNSVGGroup
                fill={
                  {
                    "payload": 4278190080,
                    "type": 0,
                  }
                }
              />
              <RNSVGGroup
                fill={
                  {
                    "payload": 4278190080,
                    "type": 0,
                  }
                }
              />
            </RNSVGGroup>
          </RNSVGGroup>
        </RNSVGSvgView>
      </View>
    </View>
    <Text
      style={
        {
          "fontSize": 30,
          "fontWeight": "bold",
          "marginTop": 30,
        }
      }
    >
      Weight/ Reps
    </Text>
    <View
      style={
        {
          "alignItems": "center",
          "justifyContent": "center",
        }
      }
    >
      <View
        style={
          {
            "borderRadius": 16,
            "marginVertical": 8,
          }
        }
      >
        <RNSVGSvgView
          bbHeight={220}
          bbWidth={675}
          focusable={false}
          height={220}
          style={
            [
              {
                "backgroundColor": "transparent",
                "borderWidth": 0,
              },
              {
                "flex": 0,
                "height": 220,
                "width": 675,
              },
            ]
          }
          width={675}
        >
          <RNSVGGroup
            fill={
              {
                "payload": 4278190080,
                "type": 0,
              }
            }
          >
            <RNSVGRect
              fill={
                {
                  "brushRef": "backgroundGradient",
                  "type": 1,
                }
              }
              fillOpacity={1}
              height={220}
              propList={
                [
                  "fill",
                  "fillOpacity",
                ]
              }
              rx={16}
              ry={16}
              width="100%"
              x={0}
              y={0}
            />
            <RNSVGGroup
              fill={
                {
                  "payload": 4278190080,
                  "type": 0,
                }
              }
              matrix={
                [
                  1,
                  0,
                  0,
                  1,
                  0,
                  0,
                ]
              }
            >
              <RNSVGDefs>
                <RNSVGLinearGradient
                  gradient={
                    [
                      0,
                      -32897,
                      1,
                      -2359296,
                    ]
                  }
                  gradientTransform={null}
                  gradientUnits={1}
                  name="backgroundGradient"
                  x1={0}
                  x2={675}
                  y1={220}
                  y2={0}
                />
                <RNSVGLinearGradient
                  gradient={
                    [
                      0,
                      436207616,
                      1,
                      436207616,
                    ]
                  }
                  gradientTransform={null}
                  gradientUnits={1}
                  name="fillShadowGradientFrom"
                  x1={0}
                  x2={0}
                  y1={0}
                  y2={220}
                />
              </RNSVGDefs>
              <RNSVGGroup
                fill={
                  {
                    "payload": 4278190080,
                    "type": 0,
                  }
                }
              >
                <RNSVGLine
                  fill={
                    {
                      "payload": 4278190080,
                      "type": 0,
                    }
                  }
                  propList={
                    [
                      "stroke",
                      "strokeWidth",
                      "strokeDasharray",
                    ]
                  }
                  stroke={
                    {
                      "payload": 4278190080,
                      "type": 0,
                    }
                  }
                  strokeDasharray={
                    [
                      "5",
                      "10",
                    ]
                  }
                  strokeWidth={1}
                  x1={64}
                  x2={675}
                  y1={16}
                  y2={16}
                />
                <RNSVGLine
                  fill={
                    {
                      "payload": 4278190080,
                      "type": 0,
                    }
                  }
                  propList={
                    [
                      "stroke",
                      "strokeWidth",
                      "strokeDasharray",
                    ]
                  }
                  stroke={
                    {
                      "payload": 4278190080,
                      "type": 0,
                    }
                  }
                  strokeDasharray={
                    [
                      "5",
                      "10",
                    ]
                  }
                  strokeWidth={1}
                  x1={64}
                  x2={675}
                  y1={57.25}
                  y2={57.25}
                />
                <RNSVGLine
                  fill={
                    {
                      "payload": 4278190080,
                      "type": 0,
                    }
                  }
                  propList={
                    [
                      "stroke",
                      "strokeWidth",
                      "strokeDasharray",
                    ]
                  }
                  stroke={
                    {
                      "payload": 4278190080,
                      "type": 0,
                    }
                  }
                  strokeDasharray={
                    [
                      "5",
                      "10",
                    ]
                  }
                  strokeWidth={1}
                  x1={64}
                  x2={675}
                  y1={98.5}
                  y2={98.5}
                />
                <RNSVGLine
                  fill={
                    {
                      "payload": 4278190080,
                      "type": 0,
                    }
                  }
                  propList={
                    [
                      "stroke",
                      "strokeWidth",
                      "strokeDasharray",
                    ]
                  }
                  stroke={
                    {
                      "payload": 4278190080,
                      "type": 0,
                    }
                  }
                  strokeDasharray={
                    [
                      "5",
                      "10",
                    ]
                  }
                  strokeWidth={1}
                  x1={64}
                  x2={675}
                  y1={139.75}
                  y2={139.75}
                />
                <RNSVGLine
                  fill={
                    {
                      "payload": 4278190080,
                      "type": 0,
                    }
                  }
                  propList={
                    [
                      "stroke",
                      "strokeWidth",
                      "strokeDasharray",
                    ]
                  }
                  stroke={
                    {
                      "payload": 4278190080,
                      "type": 0,
                    }
                  }
                  strokeDasharray={
                    [
                      "5",
                      "10",
                    ]
                  }
                  strokeWidth={1}
                  x1={64}
                  x2={675}
                  y1={181}
                  y2={181}
                />
              </RNSVGGroup>
              <RNSVGGroup
                fill={
                  {
                    "payload": 4278190080,
                    "type": 0,
                  }
                }
              >
                <RNSVGText
                  content={null}
                  dx={[]}
                  dy={[]}
                  fill={
                    {
                      "payload": 4278190080,
                      "type": 0,
                    }
                  }
                  font={
                    {
                      "fontSize": 12,
                      "textAnchor": "end",
                    }
                  }
                  matrix={
                    [
                      1,
                      0,
                      -0,
                      1,
                      0,
                      0,
                    ]
                  }
                  propList={
                    [
                      "fill",
                    ]
                  }
                  rotate={[]}
                  x={
                    [
                      52,
                    ]
                  }
                  y={
                    [
                      181,
                    ]
                  }
                >
                  <RNSVGTSpan
                    content="0.00"
                    dx={[]}
                    dy={[]}
                    fill={
                      {
                        "payload": 4278190080,
                        "type": 0,
                      }
                    }
                    font={{}}
                    rotate={[]}
                    x={[]}
                    y={[]}
                  />
                </RNSVGText>
                <RNSVGText
                  content={null}
                  dx={[]}
                  dy={[]}
                  fill={
                    {
                      "payload": 4278190080,
                      "type": 0,
                    }
                  }
                  font={
                    {
                      "fontSize": 12,
                      "textAnchor": "end",
                    }
                  }
                  matrix={
                    [
                      1,
                      0,
                      -0,
                      1,
                      0,
                      0,
                    ]
                  }
                  propList={
                    [
                      "fill",
                    ]
                  }
                  rotate={[]}
                  x={
                    [
                      52,
                    ]
                  }
                  y={
                    [
                      139.75,
                    ]
                  }
                >
                  <RNSVGTSpan
                    content="0.25"
                    dx={[]}
                    dy={[]}
                    fill={
                      {
                        "payload": 4278190080,
                        "type": 0,
                      }
                    }
                    font={{}}
                    rotate={[]}
                    x={[]}
                    y={[]}
                  />
                </RNSVGText>
                <RNSVGText
                  content={null}
                  dx={[]}
                  dy={[]}
                  fill={
                    {
                      "payload": 4278190080,
                      "type": 0,
                    }
                  }
                  font={
                    {
                      "fontSize": 12,
                      "textAnchor": "end",
                    }
                  }
                  matrix={
                    [
                      1,
                      0,
                      -0,
                      1,
                      0,
                      0,
                    ]
                  }
                  propList={
                    [
                      "fill",
                    ]
                  }
                  rotate={[]}
                  x={
                    [
                      52,
                    ]
                  }
                  y={
                    [
                      98.5,
                    ]
                  }
                >
                  <RNSVGTSpan
                    content="0.50"
                    dx={[]}
                    dy={[]}
                    fill={
                      {
                        "payload": 4278190080,
                        "type": 0,
                      }
                    }
                    font={{}}
                    rotate={[]}
                    x={[]}
                    y={[]}
                  />
                </RNSVGText>
                <RNSVGText
                  content={null}
                  dx={[]}
                  dy={[]}
                  fill={
                    {
                      "payload": 4278190080,
                      "type": 0,
                    }
                  }
                  font={
                    {
                      "fontSize": 12,
                      "textAnchor": "end",
                    }
                  }
                  matrix={
                    [
                      1,
                      0,
                      -0,
                      1,
                      0,
                      0,
                    ]
                  }
                  propList={
                    [
                      "fill",
                    ]
                  }
                  rotate={[]}
                  x={
                    [
                      52,
                    ]
                  }
                  y={
                    [
                      57.25,
                    ]
                  }
                >
                  <RNSVGTSpan
                    content="0.75"
                    dx={[]}
                    dy={[]}
                    fill={
                      {
                        "payload": 4278190080,
                        "type": 0,
                      }
                    }
                    font={{}}
                    rotate={[]}
                    x={[]}
                    y={[]}
                  />
                </RNSVGText>
                <RNSVGText
                  content={null}
                  dx={[]}
                  dy={[]}
                  fill={
                    {
                      "payload": 4278190080,
                      "type": 0,
                    }
                  }
                  font={
                    {
                      "fontSize": 12,
                      "textAnchor": "end",
                    }
                  }
                  matrix={
                    [
                      1,
                      0,
                      -0,
                      1,
                      0,
                      0,
                    ]
                  }
                  propList={
                    [
                      "fill",
                    ]
                  }
                  rotate={[]}
                  x={
                    [
                      52,
                    ]
                  }
                  y={
                    [
                      16,
                    ]
                  }
                >
                  <RNSVGTSpan
                    content="1.00"
                    dx={[]}
                    dy={[]}
                    fill={
                      {
                        "payload": 4278190080,
                        "type": 0,
                      }
                    }
                    font={{}}
                    rotate={[]}
                    x={[]}
                    y={[]}
                  />
                </RNSVGText>
              </RNSVGGroup>
              <RNSVGGroup
                fill={
                  {
                    "payload": 4278190080,
                    "type": 0,
                  }
                }
              />
              <RNSVGGroup
                fill={
                  {
                    "payload": 4278190080,
                    "type": 0,
                  }
                }
              />
              <RNSVGGroup
                fill={
                  {
                    "payload": 4278190080,
                    "type": 0,
                  }
                }
              >
                <RNSVGPath
                  d="M0,0"
                  fill={null}
                  propList={
                    [
                      "fill",
                      "stroke",
                      "strokeWidth",
                    ]
                  }
                  stroke={
                    {
                      "payload": 4278190080,
                      "type": 0,
                    }
                  }
                  strokeWidth={2}
                />
              </RNSVGGroup>
              <RNSVGGroup
                fill={
                  {
                    "payload": 4278190080,
                    "type": 0,
                  }
                }
              >
                <RNSVGPath
                  d="M0,0 L-Infinity,181 L64,181 Z"
                  fill={
                    {
                      "brushRef": "fillShadowGradientFrom",
                      "type": 1,
                    }
                  }
                  propList={
                    [
                      "fill",
                      "strokeWidth",
                    ]
                  }
                  strokeWidth={0}
                />
              </RNSVGGroup>
              <RNSVGGroup
                fill={
                  {
                    "payload": 4278190080,
                    "type": 0,
                  }
                }
              />
              <RNSVGGroup
                fill={
                  {
                    "payload": 4278190080,
                    "type": 0,
                  }
                }
              />
              <RNSVGGroup
                fill={
                  {
                    "payload": 4278190080,
                    "type": 0,
                  }
                }
              />
            </RNSVGGroup>
          </RNSVGGroup>
        </RNSVGSvgView>
      </View>
    </View>
    <Text
      style={
        {
          "fontSize": 30,
          "fontWeight": "bold",
          "marginTop": 30,
        }
      }
    >
      Distance/ Time
    </Text>
    <View
      style={
        {
          "alignItems": "center",
          "justifyContent": "center",
        }
      }
    >
      <View
        style={
          {
            "borderRadius": 16,
            "marginVertical": 8,
          }
        }
      >
        <RNSVGSvgView
          bbHeight={220}
          bbWidth={675}
          focusable={false}
          height={220}
          style={
            [
              {
                "backgroundColor": "transparent",
                "borderWidth": 0,
              },
              {
                "flex": 0,
                "height": 220,
                "width": 675,
              },
            ]
          }
          width={675}
        >
          <RNSVGGroup
            fill={
              {
                "payload": 4278190080,
                "type": 0,
              }
            }
          >
            <RNSVGRect
              fill={
                {
                  "brushRef": "backgroundGradient",
                  "type": 1,
                }
              }
              fillOpacity={1}
              height={220}
              propList={
                [
                  "fill",
                  "fillOpacity",
                ]
              }
              rx={16}
              ry={16}
              width="100%"
              x={0}
              y={0}
            />
            <RNSVGGroup
              fill={
                {
                  "payload": 4278190080,
                  "type": 0,
                }
              }
              matrix={
                [
                  1,
                  0,
                  0,
                  1,
                  0,
                  0,
                ]
              }
            >
              <RNSVGDefs>
                <RNSVGLinearGradient
                  gradient={
                    [
                      0,
                      -32897,
                      1,
                      -2359296,
                    ]
                  }
                  gradientTransform={null}
                  gradientUnits={1}
                  name="backgroundGradient"
                  x1={0}
                  x2={675}
                  y1={220}
                  y2={0}
                />
                <RNSVGLinearGradient
                  gradient={
                    [
                      0,
                      436207616,
                      1,
                      436207616,
                    ]
                  }
                  gradientTransform={null}
                  gradientUnits={1}
                  name="fillShadowGradientFrom"
                  x1={0}
                  x2={0}
                  y1={0}
                  y2={220}
                />
              </RNSVGDefs>
              <RNSVGGroup
                fill={
                  {
                    "payload": 4278190080,
                    "type": 0,
                  }
                }
              >
                <RNSVGLine
                  fill={
                    {
                      "payload": 4278190080,
                      "type": 0,
                    }
                  }
                  propList={
                    [
                      "stroke",
                      "strokeWidth",
                      "strokeDasharray",
                    ]
                  }
                  stroke={
                    {
                      "payload": 4278190080,
                      "type": 0,
                    }
                  }
                  strokeDasharray={
                    [
                      "5",
                      "10",
                    ]
                  }
                  strokeWidth={1}
                  x1={64}
                  x2={675}
                  y1={16}
                  y2={16}
                />
                <RNSVGLine
                  fill={
                    {
                      "payload": 4278190080,
                      "type": 0,
                    }
                  }
                  propList={
                    [
                      "stroke",
                      "strokeWidth",
                      "strokeDasharray",
                    ]
                  }
                  stroke={
                    {
                      "payload": 4278190080,
                      "type": 0,
                    }
                  }
                  strokeDasharray={
                    [
                      "5",
                      "10",
                    ]
                  }
                  strokeWidth={1}
                  x1={64}
                  x2={675}
                  y1={57.25}
                  y2={57.25}
                />
                <RNSVGLine
                  fill={
                    {
                      "payload": 4278190080,
                      "type": 0,
                    }
                  }
                  propList={
                    [
                      "stroke",
                      "strokeWidth",
                      "strokeDasharray",
                    ]
                  }
                  stroke={
                    {
                      "payload": 4278190080,
                      "type": 0,
                    }
                  }
                  strokeDasharray={
                    [
                      "5",
                      "10",
                    ]
                  }
                  strokeWidth={1}
                  x1={64}
                  x2={675}
                  y1={98.5}
                  y2={98.5}
                />
                <RNSVGLine
                  fill={
                    {
                      "payload": 4278190080,
                      "type": 0,
                    }
                  }
                  propList={
                    [
                      "stroke",
                      "strokeWidth",
                      "strokeDasharray",
                    ]
                  }
                  stroke={
                    {
                      "payload": 4278190080,
                      "type": 0,
                    }
                  }
                  strokeDasharray={
                    [
                      "5",
                      "10",
                    ]
                  }
                  strokeWidth={1}
                  x1={64}
                  x2={675}
                  y1={139.75}
                  y2={139.75}
                />
                <RNSVGLine
                  fill={
                    {
                      "payload": 4278190080,
                      "type": 0,
                    }
                  }
                  propList={
                    [
                      "stroke",
                      "strokeWidth",
                      "strokeDasharray",
                    ]
                  }
                  stroke={
                    {
                      "payload": 4278190080,
                      "type": 0,
                    }
                  }
                  strokeDasharray={
                    [
                      "5",
                      "10",
                    ]
                  }
                  strokeWidth={1}
                  x1={64}
                  x2={675}
                  y1={181}
                  y2={181}
                />
              </RNSVGGroup>
              <RNSVGGroup
                fill={
                  {
                    "payload": 4278190080,
                    "type": 0,
                  }
                }
              >
                <RNSVGText
                  content={null}
                  dx={[]}
                  dy={[]}
                  fill={
                    {
                      "payload": 4278190080,
                      "type": 0,
                    }
                  }
                  font={
                    {
                      "fontSize": 12,
                      "textAnchor": "end",
                    }
                  }
                  matrix={
                    [
                      1,
                      0,
                      -0,
                      1,
                      0,
                      0,
                    ]
                  }
                  propList={
                    [
                      "fill",
                    ]
                  }
                  rotate={[]}
                  x={
                    [
                      52,
                    ]
                  }
                  y={
                    [
                      181,
                    ]
                  }
                >
                  <RNSVGTSpan
                    content="0.00"
                    dx={[]}
                    dy={[]}
                    fill={
                      {
                        "payload": 4278190080,
                        "type": 0,
                      }
                    }
                    font={{}}
                    rotate={[]}
                    x={[]}
                    y={[]}
                  />
                </RNSVGText>
                <RNSVGText
                  content={null}
                  dx={[]}
                  dy={[]}
                  fill={
                    {
                      "payload": 4278190080,
                      "type": 0,
                    }
                  }
                  font={
                    {
                      "fontSize": 12,
                      "textAnchor": "end",
                    }
                  }
                  matrix={
                    [
                      1,
                      0,
                      -0,
                      1,
                      0,
                      0,
                    ]
                  }
                  propList={
                    [
                      "fill",
                    ]
                  }
                  rotate={[]}
                  x={
                    [
                      52,
                    ]
                  }
                  y={
                    [
                      139.75,
                    ]
                  }
                >
                  <RNSVGTSpan
                    content="0.25"
                    dx={[]}
                    dy={[]}
                    fill={
                      {
                        "payload": 4278190080,
                        "type": 0,
                      }
                    }
                    font={{}}
                    rotate={[]}
                    x={[]}
                    y={[]}
                  />
                </RNSVGText>
                <RNSVGText
                  content={null}
                  dx={[]}
                  dy={[]}
                  fill={
                    {
                      "payload": 4278190080,
                      "type": 0,
                    }
                  }
                  font={
                    {
                      "fontSize": 12,
                      "textAnchor": "end",
                    }
                  }
                  matrix={
                    [
                      1,
                      0,
                      -0,
                      1,
                      0,
                      0,
                    ]
                  }
                  propList={
                    [
                      "fill",
                    ]
                  }
                  rotate={[]}
                  x={
                    [
                      52,
                    ]
                  }
                  y={
                    [
                      98.5,
                    ]
                  }
                >
                  <RNSVGTSpan
                    content="0.50"
                    dx={[]}
                    dy={[]}
                    fill={
                      {
                        "payload": 4278190080,
                        "type": 0,
                      }
                    }
                    font={{}}
                    rotate={[]}
                    x={[]}
                    y={[]}
                  />
                </RNSVGText>
                <RNSVGText
                  content={null}
                  dx={[]}
                  dy={[]}
                  fill={
                    {
                      "payload": 4278190080,
                      "type": 0,
                    }
                  }
                  font={
                    {
                      "fontSize": 12,
                      "textAnchor": "end",
                    }
                  }
                  matrix={
                    [
                      1,
                      0,
                      -0,
                      1,
                      0,
                      0,
                    ]
                  }
                  propList={
                    [
                      "fill",
                    ]
                  }
                  rotate={[]}
                  x={
                    [
                      52,
                    ]
                  }
                  y={
                    [
                      57.25,
                    ]
                  }
                >
                  <RNSVGTSpan
                    content="0.75"
                    dx={[]}
                    dy={[]}
                    fill={
                      {
                        "payload": 4278190080,
                        "type": 0,
                      }
                    }
                    font={{}}
                    rotate={[]}
                    x={[]}
                    y={[]}
                  />
                </RNSVGText>
                <RNSVGText
                  content={null}
                  dx={[]}
                  dy={[]}
                  fill={
                    {
                      "payload": 4278190080,
                      "type": 0,
                    }
                  }
                  font={
                    {
                      "fontSize": 12,
                      "textAnchor": "end",
                    }
                  }
                  matrix={
                    [
                      1,
                      0,
                      -0,
                      1,
                      0,
                      0,
                    ]
                  }
                  propList={
                    [
                      "fill",
                    ]
                  }
                  rotate={[]}
                  x={
                    [
                      52,
                    ]
                  }
                  y={
                    [
                      16,
                    ]
                  }
                >
                  <RNSVGTSpan
                    content="1.00"
                    dx={[]}
                    dy={[]}
                    fill={
                      {
                        "payload": 4278190080,
                        "type": 0,
                      }
                    }
                    font={{}}
                    rotate={[]}
                    x={[]}
                    y={[]}
                  />
                </RNSVGText>
              </RNSVGGroup>
              <RNSVGGroup
                fill={
                  {
                    "payload": 4278190080,
                    "type": 0,
                  }
                }
              />
              <RNSVGGroup
                fill={
                  {
                    "payload": 4278190080,
                    "type": 0,
                  }
                }
              />
              <RNSVGGroup
                fill={
                  {
                    "payload": 4278190080,
                    "type": 0,
                  }
                }
              >
                <RNSVGPath
                  d="M0,0"
                  fill={null}
                  propList={
                    [
                      "fill",
                      "stroke",
                      "strokeWidth",
                    ]
                  }
                  stroke={
                    {
                      "payload": 4278190080,
                      "type": 0,
                    }
                  }
                  strokeWidth={2}
                />
              </RNSVGGroup>
              <RNSVGGroup
                fill={
                  {
                    "payload": 4278190080,
                    "type": 0,
                  }
                }
              >
                <RNSVGPath
                  d="M0,0 L-Infinity,181 L64,181 Z"
                  fill={
                    {
                      "brushRef": "fillShadowGradientFrom",
                      "type": 1,
                    }
                  }
                  propList={
                    [
                      "fill",
                      "strokeWidth",
                    ]
                  }
                  strokeWidth={0}
                />
              </RNSVGGroup>
              <RNSVGGroup
                fill={
                  {
                    "payload": 4278190080,
                    "type": 0,
                  }
                }
              />
              <RNSVGGroup
                fill={
                  {
                    "payload": 4278190080,
                    "type": 0,
                  }
                }
              />
              <RNSVGGroup
                fill={
                  {
                    "payload": 4278190080,
                    "type": 0,
                  }
                }
              />
            </RNSVGGroup>
          </RNSVGGroup>
        </RNSVGSvgView>
      </View>
    </View>
  </View>
</RCTScrollView>
`;

exports[`upload-download-data.js Test 1`] = `
<RCTScrollView
  style={
    {
      "backgroundColor": "#F1F1F1",
    }
  }
>
  <View>
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": undefined,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "alignItems": "center",
          "alignSelf": "center",
          "backgroundColor": "#FF0000",
          "height": 80,
          "justifyContent": "center",
          "marginBottom": 20,
          "marginTop": 5,
          "opacity": 1,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "width": "66.666667%",
        }
      }
    >
      <Text
        style={
          [
            {
              "fontWeight": "500",
            },
            {
              "fontSize": 16,
              "lineHeight": 24,
            },
            {
              "color": "#060606",
            },
          ]
        }
      >
        Upload Data
      </Text>
    </View>
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": undefined,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "alignItems": "center",
          "alignSelf": "center",
          "backgroundColor": "#FF0000",
          "height": 80,
          "justifyContent": "center",
          "marginBottom": 20,
          "marginTop": 5,
          "opacity": 1,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "width": "66.666667%",
        }
      }
    >
      <Text
        style={
          [
            {
              "fontWeight": "500",
            },
            {
              "fontSize": 16,
              "lineHeight": 24,
            },
            {
              "color": "#060606",
            },
          ]
        }
      >
        Download Data
      </Text>
    </View>
  </View>
</RCTScrollView>
`;

exports[`view-goals.js Test 1`] = `
<RCTScrollView
  style={
    {
      "backgroundColor": "#F1F1F1",
    }
  }
>
  <View>
    <Text
      style={
        [
          {
            "fontSize": 20,
            "lineHeight": 28,
          },
          {
            "textAlign": "center",
          },
          {
            "marginTop": 20,
          },
          {
            "color": "#060606",
          },
        ]
      }
    >
      No goals available
    </Text>
  </View>
</RCTScrollView>
`;

exports[`workout-history.js Test 1`] = `
<RCTScrollView
  style={
    {
      "backgroundColor": "#F1F1F1",
    }
  }
>
  <View>
    <Text
      style={
        [
          {
            "fontSize": 20,
            "lineHeight": 28,
          },
          {
            "textAlign": "center",
          },
          {
            "marginTop": 20,
          },
          {
            "color": "#060606",
          },
        ]
      }
    >
      No workouts completed
    </Text>
  </View>
</RCTScrollView>
`;
